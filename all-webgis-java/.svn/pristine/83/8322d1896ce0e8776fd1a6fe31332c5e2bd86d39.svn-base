archivesBaseName = 'qtuser'
version = 1.0

apply plugin: 'war'

dependencies {
	
	compile project(':core')
	
	// Spring Webmvc
	compile 'org.springframework:spring-web:4.2.1.RELEASE'
	compile 'org.springframework:spring-webmvc:4.2.1.RELEASE'
	
	
	// Freemarker
	//compile 'org.freemarker:freemarker:2.3.18'
	
	//sitemesh2 装饰框架
	//compile 'opensymphony:sitemesh:2.4.2'
	
	//Dubbo(x) SOA治理
	//compile('com.alibaba:dubbo:2.5.3')
	
	// ZooKeeper
	//compile 'org.apache.zookeeper:zookeeper:3.4.6'
	//compile 'com.github.sgroschupf:zkclient:0.1'
	
	//compile 'javax.servlet:servlet-api:2.5'
	//compile 'javax.servlet:jstl:1.2'
	//compile 'javax.servlet:jsp-api:2.0'
	
	providedCompile 'javax.servlet:servlet-api:2.5'
	providedCompile 'javax.servlet:jstl:1.2'
	providedCompile 'javax.servlet.jsp:jsp-api:2.2.1-b03'
	
	compile 'commons-fileupload:commons-fileupload:1.3.1'
	
	//urlrewrite
	compile 'org.tuckey:urlrewritefilter:4.0.3'
	//user-agent判断浏览器
	compile 'eu.bitwalker:UserAgentUtils:1.18'
	
	//系统提供的依赖
	providedCompile("javax.servlet.jsp:jsp-api:2.2.1-b03")
	
}


task jarWithoutResources(type: Jar) {
  baseName project.name
  from("$buildDir/classes/main")
}

war{
  dependsOn jarWithoutResources
  from("$projectDir/src/main/resources") {
    include "*.properties"
    into("WEB-INF/classes")
  }
  classpath=classpath - sourceSets.main.output
  classpath fileTree(dir:libsDir, include:"${project.name}-${version}.jar")
}

task('jarPath')<<{
  configurations.runtime.resolve().each {
    print it.toString()+";"
  }
  println();
}

task replaceLocation << {
	println "Hello"
}

